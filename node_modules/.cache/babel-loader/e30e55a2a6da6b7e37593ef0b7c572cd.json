{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursos\\\\React\\\\gender-age-app\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { storage } from '../firebase/firebase-config';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const fileInputRef = useRef();\n  const [image, setImage] = useState();\n  const [preview, setPreview] = useState();\n  const [imageName, setImageName] = useState('');\n  const [transfered, setTransfered] = useState(0);\n  const [uploading, setUploading] = useState(false);\n  const [transferedFinished, setTransferedFinished] = useState(false);\n  const [result, setResult] = useState();\n\n  const handleChangeFile = event => {\n    event.preventDefault();\n    const file = event.target.files[0];\n\n    if (file && file.type.substr(0, 5) === 'image') {\n      setImage(file);\n    } else {\n      console.log('No es imagen');\n      setImage(null);\n    }\n  };\n\n  const handleFile = image => {\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      setPreview(reader.result);\n    };\n\n    reader.readAsDataURL(image);\n  };\n\n  const handleFirebaseUpload = async () => {\n    console.log('start of upload...');\n\n    if (image) {\n      setUploading(true);\n      setTransfered(0);\n      const name = uuidv4();\n      const filename = name + '.jpg';\n      const storageRef = storage.ref(`uploaded/${filename}`);\n      const task = storageRef.put(image);\n      task.on('state_changed', taskSnapshot => {\n        console.log(`${taskSnapshot.bytesTransferred} transfered out of ${taskSnapshot.totalBytes}`);\n        setTransfered(Math.round(taskSnapshot.bytesTransferred / taskSnapshot.totalBytes) * 100);\n      });\n      setImageName(name);\n\n      try {\n        await task;\n        const url = await storageRef.getDownloadURL();\n        setUploading(false);\n        setTransferedFinished(true);\n        return url;\n      } catch (error) {\n        console.log('Error downloading the image url');\n        return null;\n      }\n    }\n  };\n\n  const handleUpload = async e => {\n    e.preventDefault();\n    let imgUrl = await handleFirebaseUpload();\n\n    if (imgUrl) {\n      console.log('ImgUrl', imgUrl);\n    }\n  };\n\n  const handlePrediction = () => {\n    console.log('Image Name', imageName);\n  };\n\n  useEffect(() => {\n    if (image) {\n      handleFile(image);\n    } else {\n      setPreview(null);\n    }\n  }, [image]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Main\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"file-button\",\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      ref: fileInputRef,\n      accept: \"image/\",\n      onChange: event => {\n        handleChangeFile(event);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), preview ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: \"preview\",\n        style: {\n          objectFit: 'cover'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setImage(null);\n        },\n        children: \"Quitar Imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => {\n        event.preventDefault();\n        fileInputRef.current.click();\n      },\n      children: \"Abrir Imagen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => handleUpload(e),\n      children: \"Cargar a Firebase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), transferedFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePrediction(),\n      children: \"Predecir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(Main, \"3yFvNvr8UleGA8EHr61fKNs8slQ=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/Cursos/React/gender-age-app/src/components/Main.js"],"names":["React","useEffect","useRef","useState","storage","v4","uuidv4","Main","fileInputRef","image","setImage","preview","setPreview","imageName","setImageName","transfered","setTransfered","uploading","setUploading","transferedFinished","setTransferedFinished","result","setResult","handleChangeFile","event","preventDefault","file","target","files","type","substr","console","log","handleFile","reader","FileReader","onloadend","readAsDataURL","handleFirebaseUpload","name","filename","storageRef","ref","task","put","on","taskSnapshot","bytesTransferred","totalBytes","Math","round","url","getDownloadURL","error","handleUpload","e","imgUrl","handlePrediction","display","objectFit","current","click"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { storage } from '../firebase/firebase-config';\r\nimport { v4 as uuidv4 } from 'uuid'\r\nconst Main = () => {\r\n\r\n    const fileInputRef = useRef();\r\n\r\n    const [image, setImage] = useState();\r\n    const [preview, setPreview] = useState();\r\n    const [imageName, setImageName] = useState('');\r\n    const [transfered, setTransfered] = useState(0)\r\n    const [uploading, setUploading] = useState(false);\r\n    const [transferedFinished, setTransferedFinished] = useState(false)\r\n    const [result, setResult] = useState();\r\n\r\n    const handleChangeFile = (event) => {\r\n        event.preventDefault();\r\n\r\n        const file = event.target.files[0];\r\n\r\n        if (file && file.type.substr(0, 5) === 'image') {\r\n            setImage(file)\r\n        } else {\r\n            console.log('No es imagen')\r\n            setImage(null);\r\n        }\r\n    }\r\n\r\n    const handleFile = (image) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            setPreview(reader.result);\r\n        }\r\n        reader.readAsDataURL(image);\r\n    }\r\n\r\n    const handleFirebaseUpload = async () => {\r\n\r\n        console.log('start of upload...')\r\n\r\n        if (image) {\r\n            setUploading(true);\r\n            setTransfered(0);\r\n\r\n            const name = uuidv4();\r\n            const filename = name + '.jpg';\r\n\r\n            const storageRef = storage.ref(`uploaded/${filename}`);\r\n            const task = storageRef.put(image);\r\n\r\n            task.on('state_changed', (taskSnapshot) => {\r\n                console.log(`${taskSnapshot.bytesTransferred} transfered out of ${taskSnapshot.totalBytes}`);\r\n\r\n                setTransfered(\r\n                    Math.round(taskSnapshot.bytesTransferred / taskSnapshot.totalBytes) * 100\r\n                )\r\n            })\r\n\r\n\r\n            setImageName(name);\r\n\r\n            try {\r\n                await task;\r\n                const url = await storageRef.getDownloadURL();\r\n                setUploading(false);\r\n                setTransferedFinished(true);\r\n                return url;\r\n            } catch (error) {\r\n                console.log('Error downloading the image url')\r\n                return null;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let imgUrl = await handleFirebaseUpload();\r\n\r\n        if (imgUrl) {\r\n            console.log('ImgUrl', imgUrl)\r\n        }\r\n    }\r\n\r\n    const handlePrediction = () => {\r\n        console.log('Image Name', imageName)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (image) {\r\n            handleFile(image)\r\n        } else {\r\n            setPreview(null)\r\n        }\r\n    }, [image]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                Main\r\n        </div>\r\n\r\n            <input\r\n                className=\"file-button\"\r\n                style={{ display: 'none' }}\r\n                type=\"file\"\r\n                ref={fileInputRef}\r\n                accept=\"image/\"\r\n                onChange={(event) => { handleChangeFile(event); }}\r\n            />\r\n            {\r\n                preview ? (\r\n                    <>\r\n                        <img src={preview} alt={\"preview\"} style={{ objectFit: 'cover' }} />\r\n                        <button onClick={() => { setImage(null) }}>Quitar Imagen</button>\r\n                    </>\r\n                ) : (\r\n                    <button onClick={(event) => {\r\n                        event.preventDefault();\r\n                        fileInputRef.current.click();\r\n                    }}>\r\n                        Abrir Imagen\r\n                    </button>\r\n                )\r\n            }\r\n            <button onClick={(e) => handleUpload(e)}>Cargar a Firebase</button>\r\n            {\r\n                transferedFinished ? (\r\n                    <button onClick={() => handlePrediction()}>Predecir</button>\r\n                ) : null\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursos\\\\React\\\\gender-age-app\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { storage } from '../firebase/firebase-config';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios').default;\n\nconst Main = () => {\n  _s();\n\n  const fileInputRef = useRef();\n  const [image, setImage] = useState();\n  const [preview, setPreview] = useState();\n  const [imageName, setImageName] = useState('');\n  const [transfered, setTransfered] = useState(0);\n  const [uploading, setUploading] = useState(false);\n  const [transferedFinished, setTransferedFinished] = useState(false);\n  const [result, setResult] = useState();\n\n  const handleChangeFile = event => {\n    event.preventDefault();\n    const file = event.target.files[0];\n\n    if (file && file.type.substr(0, 5) === 'image') {\n      setImage(file);\n    } else {\n      console.log('No es imagen');\n      setImage(null);\n    }\n  };\n\n  const handleFile = image => {\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      setPreview(reader.result);\n    };\n\n    reader.readAsDataURL(image);\n  };\n\n  const handleFirebaseUpload = async () => {\n    console.log('start of upload...');\n\n    if (image) {\n      setUploading(true);\n      setTransfered(0);\n      const name = uuidv4();\n      const filename = name + '.jpg';\n      const storageRef = storage.ref(`uploaded/${filename}`);\n      const task = storageRef.put(image);\n      task.on('state_changed', taskSnapshot => {\n        console.log(`${taskSnapshot.bytesTransferred} transfered out of ${taskSnapshot.totalBytes}`);\n        setTransfered(Math.round(taskSnapshot.bytesTransferred / taskSnapshot.totalBytes) * 100);\n      });\n      setImageName(name);\n\n      try {\n        await task;\n        const url = await storageRef.getDownloadURL();\n        setUploading(false);\n        setTransferedFinished(true);\n        return url;\n      } catch (error) {\n        console.log('Error downloading the image url');\n        return null;\n      }\n    }\n  };\n\n  const handleUpload = async e => {\n    e.preventDefault();\n    let imgUrl = await handleFirebaseUpload();\n\n    if (imgUrl) {\n      console.log('ImgUrl', imgUrl);\n    }\n  };\n\n  const handlePrediction = () => {\n    axios.post('https://ai-backend-project.herokuapp.com/detectFaces', {\n      imageName: imageName.toString()\n    }).then(res => {\n      console.log(res.data.imageURL);\n      setResult(res.data);\n    }).catch(e => console.log('Prediciont Failed', e));\n  };\n\n  useEffect(() => {\n    if (image) {\n      handleFile(image);\n    } else {\n      setPreview(null);\n    }\n  }, [image]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"card-img-top\",\n            src: preview ? preview : 'https://via.placeholder.com/500/FFFFFF',\n            alt: \"preview\",\n            style: {\n              height: \"400px\",\n              marginBottom: '5%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-image\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"file-button\",\n            style: {\n              display: 'none'\n            },\n            type: \"file\",\n            ref: fileInputRef,\n            accept: \"image/\",\n            onChange: event => {\n              handleChangeFile(event);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), preview ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"image-button\",\n            onClick: () => {\n              setImage(null);\n            },\n            children: \"Quitar Imagen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"image-button\",\n            onClick: event => {\n              event.preventDefault();\n              fileInputRef.current.click();\n            },\n            children: \"Abrir Imagen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-prediction\",\n          onClick: e => handleUpload(e),\n          children: \"Predecir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          style: {\n            width: \"18rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"card-img-top\",\n            src: result ? result.imageURL : 'https://via.placeholder.com/500x600/FFFFFF',\n            alt: \"preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), result ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Age: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this), result ? result.response.age : '', /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Age: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this), result ? result.response.age : '', /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Age: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this), result ? result.response.age : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"3yFvNvr8UleGA8EHr61fKNs8slQ=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/Cursos/React/gender-age-app/src/components/Main.js"],"names":["React","useEffect","useRef","useState","storage","v4","uuidv4","axios","require","default","Main","fileInputRef","image","setImage","preview","setPreview","imageName","setImageName","transfered","setTransfered","uploading","setUploading","transferedFinished","setTransferedFinished","result","setResult","handleChangeFile","event","preventDefault","file","target","files","type","substr","console","log","handleFile","reader","FileReader","onloadend","readAsDataURL","handleFirebaseUpload","name","filename","storageRef","ref","task","put","on","taskSnapshot","bytesTransferred","totalBytes","Math","round","url","getDownloadURL","error","handleUpload","e","imgUrl","handlePrediction","post","toString","then","res","data","imageURL","catch","height","marginBottom","display","current","click","width","response","age"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { storage } from '../firebase/firebase-config';\r\nimport { v4 as uuidv4 } from 'uuid'\r\nconst axios = require('axios').default;\r\n\r\nconst Main = () => {\r\n\r\n    const fileInputRef = useRef();\r\n\r\n    const [image, setImage] = useState();\r\n    const [preview, setPreview] = useState();\r\n    const [imageName, setImageName] = useState('');\r\n    const [transfered, setTransfered] = useState(0)\r\n    const [uploading, setUploading] = useState(false);\r\n    const [transferedFinished, setTransferedFinished] = useState(false)\r\n    const [result, setResult] = useState();\r\n\r\n    const handleChangeFile = (event) => {\r\n        event.preventDefault();\r\n\r\n        const file = event.target.files[0];\r\n\r\n        if (file && file.type.substr(0, 5) === 'image') {\r\n            setImage(file)\r\n        } else {\r\n            console.log('No es imagen')\r\n            setImage(null);\r\n        }\r\n    }\r\n\r\n    const handleFile = (image) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            setPreview(reader.result);\r\n        }\r\n        reader.readAsDataURL(image);\r\n    }\r\n\r\n    const handleFirebaseUpload = async () => {\r\n\r\n        console.log('start of upload...')\r\n\r\n        if (image) {\r\n            setUploading(true);\r\n            setTransfered(0);\r\n\r\n            const name = uuidv4();\r\n            const filename = name + '.jpg';\r\n\r\n            const storageRef = storage.ref(`uploaded/${filename}`);\r\n            const task = storageRef.put(image);\r\n\r\n            task.on('state_changed', (taskSnapshot) => {\r\n                console.log(`${taskSnapshot.bytesTransferred} transfered out of ${taskSnapshot.totalBytes}`);\r\n\r\n                setTransfered(\r\n                    Math.round(taskSnapshot.bytesTransferred / taskSnapshot.totalBytes) * 100\r\n                )\r\n            })\r\n\r\n\r\n            setImageName(name);\r\n\r\n            try {\r\n                await task;\r\n                const url = await storageRef.getDownloadURL();\r\n                setUploading(false);\r\n                setTransferedFinished(true);\r\n                return url;\r\n            } catch (error) {\r\n                console.log('Error downloading the image url')\r\n                return null;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let imgUrl = await handleFirebaseUpload();\r\n\r\n        if (imgUrl) {\r\n            console.log('ImgUrl', imgUrl)\r\n        }\r\n    }\r\n\r\n    const handlePrediction = () => {\r\n\r\n        axios.post('https://ai-backend-project.herokuapp.com/detectFaces', {\r\n            imageName: imageName.toString()\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data.imageURL)\r\n                setResult(res.data);\r\n            })\r\n            .catch((e) => console.log('Prediciont Failed', e))\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (image) {\r\n            handleFile(image)\r\n        } else {\r\n            setPreview(null)\r\n        }\r\n    }, [image]);\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"image-container\">\r\n                <div className=\"image-container-1\">\r\n                    <div className=\"card\" >\r\n                        <img\r\n                            className=\"card-img-top\"\r\n                            src={preview ? preview : 'https://via.placeholder.com/500/FFFFFF'}\r\n                            alt=\"preview\"\r\n                            style={{ height: \"400px\", marginBottom: '5%' }}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"select-image\">\r\n                        <input\r\n                            className=\"file-button\"\r\n                            style={{ display: 'none' }}\r\n                            type=\"file\"\r\n                            ref={fileInputRef}\r\n                            accept=\"image/\"\r\n                            onChange={(event) => { handleChangeFile(event); }}\r\n                        />\r\n                        {\r\n                            preview ? (\r\n                                <button className=\"image-button\" onClick={() => { setImage(null) }}>Quitar Imagen</button>\r\n                            ) : (\r\n                                <button\r\n                                    className=\"image-button\"\r\n                                    onClick={(event) => {\r\n                                        event.preventDefault();\r\n                                        fileInputRef.current.click();\r\n                                    }}>\r\n                                    Abrir Imagen\r\n                                </button>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <button className=\"button-prediction\" onClick={(e) => handleUpload(e)}>Predecir</button>\r\n                </div>\r\n\r\n                <div className=\"image-container-2\">\r\n                    <div className=\"card\" style={{ width: \"18rem\" }}>\r\n                        <img className=\"card-img-top\" src={result ? result.imageURL : 'https://via.placeholder.com/500x600/FFFFFF'} alt=\"preview\" />\r\n                        {\r\n                            result ? (\r\n\r\n                                <div className=\"card-body\">\r\n                                    <span>Age: </span>{result ? result.response.age : ''}\r\n                                    <span>Age: </span>{result ? result.response.age : ''}\r\n                                    <span>Age: </span>{result ? result.response.age : ''}\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            {/* <span>Porcentaje: {transfered}</span>\r\n            {\r\n                transferedFinished ? (\r\n                    <button onClick={() => handlePrediction()}>Predecir</button>\r\n                ) : null\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}